{"data":{"orgContent":{"html":"<p>I recently started making heavy use of a feature in org-babel called org-babel-tangle, to create literate programming dotfiles. It's simple to use, and makes for <i>very</i> readable code.</p><p>For this blog, I'll be (re)creating my tmux config by tangling the source seen in this post. Everything below the break is copied over (with some minor editorialization ) from my actual tmux org file.</p><p><a href=\"https://raw.githubusercontent.com/diminishedprime/matts-blog/master/content/blog/org-tangle/index.org\">Raw text for this file.</a></p><p>Note: instead of using <code>properties</code> as the language for the src, I use <code>conf</code>. This only effects how emacs does syntax highlighting of the contents. Since <code>conf</code>isn't a supported language of prism-js, I'm using <code>properties</code> which isn't perfect, but is better than nothing.</p><hr><div class=\"section\"><h2>Tmux Config</h2><p>I prefer using <code>M-Space</code> for my tmux modifier instead of the default <code>C-b</code>, so I start by getting that setup.</p><pre><code class=\"language-properties\"><span class=\"token attr-name\">  unbind</span> <span class=\"token attr-value\">C-b</span>\n<span class=\"token attr-name\">  set</span> <span class=\"token attr-value\">-g prefix C-Space</span>\n<span class=\"token attr-name\">  set</span> <span class=\"token attr-value\">-g prefix M-Space</span>\n<span class=\"token attr-name\">  bind</span> <span class=\"token attr-value\">Space send-prefix</span></code></pre><p>I want my terminal to be setup as <code>xterm-24bits</code> since that (along with some other magic), is necessary to get 24-bit color to work with emacs.</p><pre><code class=\"language-properties\"><span class=\"token attr-name\">  set</span> <span class=\"token attr-value\">-g default-terminal \"xterm-24bits\"</span>\n<span class=\"token attr-name\">  set</span> <span class=\"token attr-value\">-ga terminal-overrides \",xterm-24bits:Tc\"</span></code></pre><p>I prefer to use vi keybindings for copy-paste, etc.</p><pre><code class=\"language-properties\"><span class=\"token attr-name\">  set-window-option</span> <span class=\"token attr-value\">-g mode-keys vi</span></code></pre><p>Tmux copy-paste is confusing, but I don't blame tmux. Setting this up makes it where (at least most of the time), tmux copies to my system clipboard.</p><p>Use <code>M-Space [</code> to enter copy mode.</p><pre><code class=\"language-properties\"><span class=\"token attr-name\">  bind-key</span> <span class=\"token attr-value\">-T copy-mode-vi 'v' send-keys -X begin-selection</span>\n<span class=\"token attr-name\">  bind-key</span> <span class=\"token attr-value\">-T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel</span>\n<span class=\"token attr-name\">  bind-key</span> <span class=\"token attr-value\">-T copy-mode-vi 'Escape' send-keys -X cancel</span></code></pre><p>This makes it where escape isn't sent as mod all the time.</p><pre><code class=\"language-properties\"><span class=\"token attr-name\">  set</span> <span class=\"token attr-value\">-sg escape-time 0</span></code></pre><p>Using the mouse with tmux is often easier than other means, fite me.</p><pre><code class=\"language-properties\"><span class=\"token attr-name\">  set</span> <span class=\"token attr-value\">-g mouse on</span></code></pre><p>Some vim-influenced things. Use <code>h=, =j</code>, <code>k=, =l</code> for selecting panes, and <code>H=, =J</code>, <code>K=, =L</code>for swapping panes in that direction.</p><pre><code class=\"language-properties\"><span class=\"token attr-name\">  bind</span> <span class=\"token attr-value\">h select-pane -L</span>\n<span class=\"token attr-name\">  bind</span> <span class=\"token attr-value\">j select-pane -D</span>\n<span class=\"token attr-name\">  bind</span> <span class=\"token attr-value\">k select-pane -U</span>\n<span class=\"token attr-name\">  bind</span> <span class=\"token attr-value\">l select-pane -R</span>\n\n<span class=\"token attr-name\">  bind</span> <span class=\"token attr-value\">H select-pane -L \\; swap-pane -s '!'</span>\n<span class=\"token attr-name\">  bind</span> <span class=\"token attr-value\">J select-pane -D \\; swap-pane -s '!'</span>\n<span class=\"token attr-name\">  bind</span> <span class=\"token attr-value\">K select-pane -U \\; swap-pane -s '!'</span>\n<span class=\"token attr-name\">  bind</span> <span class=\"token attr-value\">L select-pane -R \\; swap-pane -s '!'</span></code></pre><p>Bindings for selecting windows. <code>M-Space 0-9</code> are set up (chrome-style) to pick that window. <code>M-Space b</code> and <code>M-b</code> are set up (i3-style) to switch to the previously selected window.</p><pre><code class=\"language-properties\"><span class=\"token attr-name\">  bind-key</span> <span class=\"token attr-value\">-n M-b last-window</span>\n<span class=\"token attr-name\">  bind-key</span> <span class=\"token attr-value\">b last-window</span>\n\n<span class=\"token attr-name\">  bind-key</span> <span class=\"token attr-value\">-n M-0 select-window -t 0</span>\n<span class=\"token attr-name\">  bind-key</span> <span class=\"token attr-value\">-n M-1 select-window -t 1</span>\n<span class=\"token attr-name\">  bind-key</span> <span class=\"token attr-value\">-n M-2 select-window -t 2</span>\n<span class=\"token attr-name\">  bind-key</span> <span class=\"token attr-value\">-n M-3 select-window -t 3</span>\n<span class=\"token attr-name\">  bind-key</span> <span class=\"token attr-value\">-n M-4 select-window -t 4</span>\n<span class=\"token attr-name\">  bind-key</span> <span class=\"token attr-value\">-n M-5 select-window -t 5</span>\n<span class=\"token attr-name\">  bind-key</span> <span class=\"token attr-value\">-n M-6 select-window -t 6</span>\n<span class=\"token attr-name\">  bind-key</span> <span class=\"token attr-value\">-n M-7 select-window -t 7</span>\n<span class=\"token attr-name\">  bind-key</span> <span class=\"token attr-value\">-n M-8 select-window -t 8</span>\n<span class=\"token attr-name\">  bind-key</span> <span class=\"token attr-value\">-n M-9 select-window -t 9</span></code></pre><p>I like to split-windows like in emacs.</p><ul><li><code>M-Space \\</code> - split horizontally (\\ is the same key as |, but holding shift is a pita)</li><li><code>M-Space -</code> - split vertically</li></ul><p>We also unbind the original keys to keep things clean.</p><pre><code class=\"language-properties\"><span class=\"token attr-name\">  unbind</span> <span class=\"token attr-value\">'\"'</span>\n<span class=\"token attr-name\">  bind</span> <span class=\"token attr-value\">\\ split-window -h -c \"#{pane_current_path}\"</span>\n\n<span class=\"token attr-name\">  unbind</span> <span class=\"token attr-value\">%</span>\n<span class=\"token attr-name\">  bind</span> <span class=\"token attr-value\">- split-window -v -c \"#{pane_current_path}\"</span></code></pre><p>I usually just use <code>M-Space z</code> for full screening, but I like having <code>M-Space u</code>also available since that matches my i3 setup.</p><pre><code class=\"language-properties\"><span class=\"token attr-name\">  bind</span> <span class=\"token attr-value\">u resize-pane -Z</span></code></pre><p>Always nice to be able to resource the tmux file so it's easier to try out changes.</p><pre><code class=\"language-properties\"><span class=\"token attr-name\">  bind</span> <span class=\"token attr-value\">r source-file ~/.tmux.conf</span></code></pre><p>A bunch of status-related things.</p><ul><li><code>status-keys emacs</code> - Use emacs-style bindings for status-keys things. This lets me use things like <code>C-e</code> and <code>C-d</code> while editing window names.</li></ul><pre><code class=\"language-properties\"><span class=\"token attr-name\">  set</span> <span class=\"token attr-value\">-g status on</span>\n<span class=\"token attr-name\">  set</span> <span class=\"token attr-value\">-g status-justify left</span>\n<span class=\"token attr-name\">  set</span> <span class=\"token attr-value\">-g status-keys emacs</span>\n<span class=\"token attr-name\">  set</span> <span class=\"token attr-value\">-g status-position top</span>\n<span class=\"token attr-name\">  set</span> <span class=\"token attr-value\">-g status-style 'fg=#ffffff,bg=#002b36'</span>\n<span class=\"token attr-name\">  set</span> <span class=\"token attr-value\">-g status-right ''</span>\n<span class=\"token attr-name\">  set</span> <span class=\"token attr-value\">-g status-left '#(~/.local/bin/mjh-tmux-status-left.sh)'</span>\n<span class=\"token attr-name\">  set</span> <span class=\"token attr-value\">-g window-status-format '#[fg=#657b83]#[bg=#002b36]#I: #W'</span>\n<span class=\"token attr-name\">  set</span> <span class=\"token attr-value\">-g window-status-current-format '#[fg=#2aa198]#[bg=002b36]#I: #W'</span></code></pre><p>Use fish as the default shell</p><pre><code class=\"language-properties\"><span class=\"token attr-name\">  set</span> <span class=\"token attr-value\">-g default-shell /usr/bin/fish</span></code></pre></div>","meta":{"title":"Org Babel Tangle","date":"April 21, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/index","previous":null,"next":null}}